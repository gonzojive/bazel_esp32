exports_files(["cores/esp32/main.cpp"])

exports_files(glob(["**"]), visibility = ["//visibility:public"],)

filegroup(
    name = "sources",
    srcs = glob(["**"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "gen_esp32part.py",
    srcs = ["tools/gen_esp32part.py"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "esptool.py",
    srcs = ["tools/esptool.py"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "core_lib",
    srcs = glob(["cores/esp32/**/*.h"]) + [
        "cores/esp32/Esp.cpp",
        "cores/esp32/FunctionalInterrupt.cpp",
        "cores/esp32/HardwareSerial.cpp",
        "cores/esp32/IPAddress.cpp",
        "cores/esp32/IPv6Address.cpp",
        "cores/esp32/MD5Builder.cpp",
        "cores/esp32/Print.cpp",
        "cores/esp32/Stream.cpp",
        "cores/esp32/StreamString.cpp",
        "cores/esp32/USB.cpp",
        "cores/esp32/USBCDC.cpp",
        "cores/esp32/WMath.cpp",
        "cores/esp32/WString.cpp",
        "cores/esp32/base64.cpp",
        "cores/esp32/cbuf.cpp",
    ],
    visibility = ["//visibility:public"],
    deps = [":core_c_lib"],
)

cc_library(
    name = "core_c_lib",
    srcs = glob(["cores/esp32/libb64/*.h"]) + glob(["cores/esp32/*.h"]) + [
        "cores/esp32/esp32-hal-adc.c",
        "cores/esp32/esp32-hal-bt.c",
        "cores/esp32/esp32-hal-cpu.c",
        "cores/esp32/esp32-hal-dac.c",
        "cores/esp32/esp32-hal-gpio.c",
        "cores/esp32/esp32-hal-i2c.c",
        "cores/esp32/esp32-hal-ledc.c",
        "cores/esp32/esp32-hal-log.c",
        "cores/esp32/esp32-hal-matrix.c",
        "cores/esp32/esp32-hal-misc.c",
        "cores/esp32/esp32-hal-psram.c",
        "cores/esp32/esp32-hal-rmt.c",
        "cores/esp32/esp32-hal-sigmadelta.c",
        "cores/esp32/esp32-hal-spi.c",
        "cores/esp32/esp32-hal-time.c",
        "cores/esp32/esp32-hal-timer.c",
        "cores/esp32/esp32-hal-tinyusb.c",
        "cores/esp32/esp32-hal-touch.c",
        "cores/esp32/esp32-hal-uart.c",
        "cores/esp32/libb64/cdecode.c",
        "cores/esp32/libb64/cencode.c",
        "cores/esp32/stdlib_noniso.c",
        "cores/esp32/wiring_pulse.c",
        "cores/esp32/wiring_shift.c",
    ],
    copts = ["-std=gnu99"],
    visibility = ["//visibility:public"],
)

# Bundled libraries

cc_library(
  name = "SPI",
  srcs = ["libraries/SPI/src/SPI.cpp"],
  hdrs = ["libraries/SPI/src/SPI.h"],
  includes = ["libraries/SPI/src"],
  visibility = ["//visibility:public"],
)
