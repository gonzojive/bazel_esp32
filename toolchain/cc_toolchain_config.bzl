load(
    "@bazel_tools//tools/cpp:cc_toolchain_config_lib.bzl",
    "feature",
    "flag_group",
    "flag_set",
    "tool_path",
)
load("@bazel_tools//tools/build_defs/cc:action_names.bzl", "ACTION_NAMES")

# This file has been written based off the variable definitions in the following
# files:
#  - https://github.com/espressif/arduino-esp32/blob/2.0.3/platform.txt
#  - https://github.com/espressif/arduino-esp32/blob/2.0.3/boards.txt

BUILD_F_CPU = "240000000L"
RUNTIME_IDE_VERSION = "10607"
BUILD_BOARD = "ESP32_DEV"
BUILD_BOOTLOADER_ADDR = "0x1000"
BUILD_ARCH = "ESP32"
BUILD_FLASH_MODE = "dio"
BUILD_MEMORY_TYPE = "dio_qspi"  # "qspi_qspi"

# aka build.mcu, argument to esp --chip flag.
BUILD_VARIANT = "esp32"
BUILD_MCU = BUILD_VARIANT

BUILD_EXTRA_FLAGS = [
    "-DF_CPU=" + BUILD_F_CPU,
    "-DARDUINO=" + RUNTIME_IDE_VERSION,
    "-DARDUINO_" + BUILD_BOARD,
    "-DARDUINO_ARCH_" + BUILD_ARCH,
    "-DARDUINO_BOARD=\"" + BUILD_BOARD + "\"",
    "-DARDUINO_VARIANT=\"" + BUILD_VARIANT + "\"",
    "-DDARDUINO_USB_CDC_ON_BOOT=0",
    "-DESP32=1",
]

RUNTIME_PLATFORM_PATH = "external/arduino_esp32"

COMPILER_SDK_PATH = RUNTIME_PLATFORM_PATH + "/tools/sdk/" + BUILD_MCU

# compiler.cpreprocessor.flags.esp32=

INCLUDE_DIRS = [
    "include/config",
    "include/newlib/platform_include",
    "include/freertos/include",
    "include/freertos/include/esp_additions/freertos",
    "include/freertos/port/xtensa/include",
    "include/freertos/include/esp_additions",
    "include/esp_hw_support/include",
    "include/esp_hw_support/include/soc",
    "include/esp_hw_support/include/soc/esp32",
    "include/esp_hw_support/port/esp32",
    "include/esp_hw_support/port/esp32/private_include",
    "include/heap/include",
    "include/log/include",
    "include/lwip/include/apps",
    "include/lwip/include/apps/sntp",
    "include/lwip/lwip/src/include",
    "include/lwip/port/esp32/include",
    "include/lwip/port/esp32/include/arch",
    "include/soc/include",
    "include/soc/esp32",
    "include/soc/esp32/include",
    "include/hal/esp32/include",
    "include/hal/include",
    "include/hal/platform_port/include",
    "include/esp_rom/include",
    "include/esp_rom/include/esp32",
    "include/esp_rom/esp32",
    "include/esp_common/include",
    "include/esp_system/include",
    "include/esp_system/port/soc",
    "include/esp_system/port/public_compat",
    "include/esp32/include",
    "include/xtensa/include",
    "include/xtensa/esp32/include",
    "include/driver/include",
    "include/driver/esp32/include",
    "include/esp_pm/include",
    "include/esp_ringbuf/include",
    "include/efuse/include",
    "include/efuse/esp32/include",
    "include/vfs/include",
    "include/esp_wifi/include",
    "include/esp_event/include",
    "include/esp_netif/include",
    "include/esp_eth/include",
    "include/tcpip_adapter/include",
    "include/esp_phy/include",
    "include/esp_phy/esp32/include",
    "include/esp_ipc/include",
    "include/app_trace/include",
    "include/esp_timer/include",
    "include/mbedtls/port/include",
    "include/mbedtls/mbedtls/include",
    "include/mbedtls/esp_crt_bundle/include",
    "include/app_update/include",
    "include/spi_flash/include",
    "include/bootloader_support/include",
    "include/nvs_flash/include",
    "include/pthread/include",
    "include/esp_gdbstub/include",
    "include/esp_gdbstub/xtensa",
    "include/esp_gdbstub/esp32",
    "include/espcoredump/include",
    "include/espcoredump/include/port/xtensa",
    "include/wpa_supplicant/include",
    "include/wpa_supplicant/port/include",
    "include/wpa_supplicant/esp_supplicant/include",
    "include/ieee802154/include",
    "include/console",
    "include/asio/asio/asio/include",
    "include/asio/port/include",
    "include/bt/common/osi/include",
    "include/bt/include/esp32/include",
    "include/bt/common/api/include/api",
    "include/bt/common/btc/profile/esp/blufi/include",
    "include/bt/common/btc/profile/esp/include",
    "include/bt/host/bluedroid/api/include/api",
    "include/cbor/port/include",
    "include/unity/include",
    "include/unity/unity/src",
    "include/cmock/CMock/src",
    "include/coap/port/include",
    "include/coap/libcoap/include",
    "include/nghttp/port/include",
    "include/nghttp/nghttp2/lib/includes",
    "include/esp-tls",
    "include/esp-tls/esp-tls-crypto",
    "include/esp_adc_cal/include",
    "include/esp_hid/include",
    "include/tcp_transport/include",
    "include/esp_http_client/include",
    "include/esp_http_server/include",
    "include/esp_https_ota/include",
    "include/esp_lcd/include",
    "include/esp_lcd/interface",
    "include/protobuf-c/protobuf-c",
    "include/protocomm/include/common",
    "include/protocomm/include/security",
    "include/protocomm/include/transports",
    "include/mdns/include",
    "include/esp_local_ctrl/include",
    "include/sdmmc/include",
    "include/esp_serial_slave_link/include",
    "include/esp_websocket_client/include",
    "include/expat/expat/expat/lib",
    "include/expat/port/include",
    "include/wear_levelling/include",
    "include/fatfs/diskio",
    "include/fatfs/vfs",
    "include/fatfs/src",
    "include/freemodbus/common/include",
    "include/idf_test/include",
    "include/idf_test/include/esp32",
    "include/jsmn/include",
    "include/json/cJSON",
    "include/libsodium/libsodium/src/libsodium/include",
    "include/libsodium/port_include",
    "include/mqtt/esp-mqtt/include",
    "include/openssl/include",
    "include/perfmon/include",
    "include/spiffs/include",
    "include/ulp/include",
    "include/wifi_provisioning/include",
    "include/button/button/include",
    "include/rmaker_common/include",
    "include/json_parser/upstream/include",
    "include/json_parser/upstream",
    "include/json_generator/upstream",
    "include/esp_schedule/include",
    "include/esp_rainmaker/include",
    "include/qrcode/include",
    "include/ws2812_led",
    "include/esp-dsp/modules/dotprod/include",
    "include/esp-dsp/modules/support/include",
    "include/esp-dsp/modules/windows/include",
    "include/esp-dsp/modules/windows/hann/include",
    "include/esp-dsp/modules/windows/blackman/include",
    "include/esp-dsp/modules/windows/blackman_harris/include",
    "include/esp-dsp/modules/windows/blackman_nuttall/include",
    "include/esp-dsp/modules/windows/nuttall/include",
    "include/esp-dsp/modules/windows/flat_top/include",
    "include/esp-dsp/modules/iir/include",
    "include/esp-dsp/modules/fir/include",
    "include/esp-dsp/modules/math/include",
    "include/esp-dsp/modules/math/add/include",
    "include/esp-dsp/modules/math/sub/include",
    "include/esp-dsp/modules/math/mul/include",
    "include/esp-dsp/modules/math/addc/include",
    "include/esp-dsp/modules/math/mulc/include",
    "include/esp-dsp/modules/math/sqrt/include",
    "include/esp-dsp/modules/matrix/include",
    "include/esp-dsp/modules/fft/include",
    "include/esp-dsp/modules/dct/include",
    "include/esp-dsp/modules/conv/include",
    "include/esp-dsp/modules/common/include",
    "include/esp-dsp/modules/kalman/ekf/include",
    "include/esp-dsp/modules/kalman/ekf_imu13states/include",
    "include/esp_littlefs/src",
    "include/esp_littlefs/include",
    "include/esp-dl/include",
    "include/esp-dl/include/tool",
    "include/esp-dl/include/typedef",
    "include/esp-dl/include/image",
    "include/esp-dl/include/math",
    "include/esp-dl/include/nn",
    "include/esp-dl/include/layer",
    "include/esp-dl/include/detect",
    "include/esp-dl/include/model_zoo",
    "include/esp-sr/esp-tts/esp_tts_chinese/include",
    "include/esp-sr/include/esp32",
    "include/esp32-camera/driver/include",
    "include/esp32-camera/conversions/include",
    "include/fb_gfx/include",
]

#   '-D_GNU_SOURCE'
#   '-D_POSIX_READER_WRITER_LOCKS',
#   '-DESP_PLATFORM',
#   '-DHAVE_CONFIG_H',
#   '-DIDF_VER="v4.4.1-1-gb8050b365e"',
#   '-DMBEDTLS_CONFIG_FILE="mbedtls/esp_config.h"',

COMPILER_CPREPROCESSOR_FLAGS = [
    "-D_GNU_SOURCE",
    "-D_POSIX_READER_WRITER_LOCKS",
    "-DESP_PLATFORM",
    "-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\"",
    "-DHAVE_CONFIG_H",
    "-DGCC_NOT_5_2_0=0",
    "-DHAVE_CONFIG_H",
    '-DIDF_VER="v4.4.1-1-gb8050b365e"',
    '-DMBEDTLS_CONFIG_FILE="mbedtls/esp_config.h"',
    "-DUNITY_INCLUDE_CONFIG_H",
    "-DWITH_POSIX",
    "-D_POSIX_TIMERS",
    # time.h doesn't define these by default, so set them to something sane.
    # This is required for Abseil's time handling.
    "-D__TM_GMTOFF=__tm_gmtoff",
    "-D__TM_ZONE=__tm_zone",
] + ["-I" + COMPILER_SDK_PATH + "/" + p for p in INCLUDE_DIRS] + [
    "-I" + RUNTIME_PLATFORM_PATH + "/cores/esp32",
    "-I" + RUNTIME_PLATFORM_PATH + "/variants/esp32",
    # {compiler.sdk.path}/{build.memory_type}/include
    "-I" + COMPILER_SDK_PATH + "/" + BUILD_MEMORY_TYPE + "/include",
]

COMPILER_WARNING_FLAGS = ["-Wall"]

COMPILER_CPP_FLAGS_NEW = [
    "-c",
    "-fdata-sections",
    "-fexceptions",
    "-ffunction-sections",
    "-fno-jump-tables",
    "-fno-rtti",
    "-fno-tree-switch-conversion",
    "-freorder-blocks",
    "-fstack-protector",
    "-fstrict-volatile-bitfields",
    "-ggdb",
    "-mlongcalls",
    "-MMD",
    "-Os",
    "-std=gnu++11",
]

COMPILER_CPP_FLAGS = [
    "-c",
    "-fdata-sections",
    "-fexceptions",
    "-ffunction-sections",
    "-fno-jump-tables",
    "-fno-rtti",
    "-fno-tree-switch-conversion",
    "-freorder-blocks",
    "-fstack-protector",
    "-fstrict-volatile-bitfields",
    "-ggdb",
    "-mlongcalls",
    "-MMD",
    "-Os",
    "-std=gnu++11",
] + COMPILER_WARNING_FLAGS + [
    # "-Wno-error=maybe-uninitialized",
    # "-Wno-error=unused-function",
    # "-Wno-error=unused-but-set-variable",
    # "-Wno-error=unused-variable",
    # "-Wno-error=deprecated-declarations",
    # "-Wno-unused-parameter",
    # "-Wno-unused-but-set-parameter",
    # "-Wno-missing-field-initializers",
    # "-Wno-sign-compare",
    # "-Wpointer-arith",
    "-Wno-error=deprecated-declarations",
    "-Wno-error=unused-but-set-variable",
    "-Wno-error=unused-function",
    "-Wno-error=unused-variable",
    "-Wno-frame-address",
    "-Wno-sign-compare",
    "-Wno-unused-parameter",
    "-Wwrite-strings",
]

COMPILER_C_FLAGS = COMPILER_CPP_FLAGS

COMPILER_C_ELF_FLAGS = [
    "-nostdlib",
    "-L" + COMPILER_SDK_PATH + "/lib",
    "-L" + COMPILER_SDK_PATH + "/ld",
    "-T",
    "esp32_out.ld",
    "-T",
    "esp32.project.ld",
    "-T",
    "esp32.rom.ld",
    "-T",
    "esp32.peripherals.ld",
    "-T",
    "esp32.rom.libgcc.ld",
    "-T",
    "esp32.rom.spiram_incompatible_fns.ld",
    "-u",
    "esp_app_desc",
    "-u",
    "ld_include_panic_highint_hdl",
    "-u",
    "call_user_start_cpu0",
    "-Wl,--gc-sections",
    "-Wl,-static",
    "-Wl,--undefined=uxTopUsedPriority",
    "-u",
    "__cxa_guard_dummy",
    "-u",
    "__cxx_fatal_exception",
]

#compiler.c.flags.esp32=-mlongcalls -Wno-frame-address -ffunction-sections -fdata-sections -Wno-error=unused-function -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -ggdb -Os -freorder-blocks -Wwrite-strings -fstack-protector -fstrict-volatile-bitfields -Wno-error=unused-but-set-variable -fno-jump-tables -fno-tree-switch-conversion -std=gnu99 -Wno-old-style-declaration  -MMD -c

COMPILER_C_ELF_LIBS = [
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_trace",
    "-lapp_update",
    "-lapp_update",
    "-lapp_update",
    "-lapp_update",
    "-lapp_update",
    "-lapp_update",
    "-lasio",
    "-lasio",
    "-lbootloader_support",
    "-lbootloader_support",
    "-lbootloader_support",
    "-lbootloader_support",
    "-lbootloader_support",
    "-lbootloader_support",
    "-lbt",
    "-lbt",
    "-lbtdm_app",
    "-lbutton",
    "-lc ",
    "-lc_speech_features",
    "-lcat_face_detect",
    "-lcbor",
    "-lcbor",
    "-lcmock",
    "-lcmock",
    "-lcoap",
    "-lcoap",
    "-lcoexist",
    "-lcoexist",
    "-lcoexist",
    "-lcoexist",
    "-lcoexist",
    "-lcolor_detect",
    "-lconsole",
    "-lconsole",
    "-lconsole",
    "-lconsole",
    "-lconsole",
    "-lconsole",
    "-lcore",
    "-lcore",
    "-lcore",
    "-lcore",
    "-lcore",
    "-lcustomized_word_wn5",
    "-lcxx",
    "-lcxx",
    "-lcxx",
    "-lcxx",
    "-lcxx",
    "-lcxx",
    "-lcxx",
    "-ldl_lib",
    "-ldl",
    "-ldriver",
    "-ldriver",
    "-ldriver",
    "-ldriver",
    "-ldriver",
    "-ldriver",
    "-lefuse",
    "-lefuse",
    "-lefuse",
    "-lefuse",
    "-lefuse",
    "-lefuse",
    "-lesp_adc_cal",
    "-lesp_adc_cal",
    "-lesp_audio_front_end",
    "-lesp_audio_front_end",
    "-lesp_audio_processor",
    "-lesp_audio_processor",
    "-lesp_common",
    "-lesp_common",
    "-lesp_common",
    "-lesp_common",
    "-lesp_common",
    "-lesp_common",
    "-lesp_eth",
    "-lesp_eth",
    "-lesp_eth",
    "-lesp_eth",
    "-lesp_eth",
    "-lesp_eth",
    "-lesp_event",
    "-lesp_event",
    "-lesp_event",
    "-lesp_event",
    "-lesp_event",
    "-lesp_event",
    "-lesp_gdbstub",
    "-lesp_gdbstub",
    "-lesp_gdbstub",
    "-lesp_gdbstub",
    "-lesp_gdbstub",
    "-lesp_gdbstub",
    "-lesp_hid",
    "-lesp_hid",
    "-lesp_http_client",
    "-lesp_http_client",
    "-lesp_http_client",
    "-lesp_http_client",
    "-lesp_http_client",
    "-lesp_http_client",
    "-lesp_http_server",
    "-lesp_http_server",
    "-lesp_http_server",
    "-lesp_http_server",
    "-lesp_http_server",
    "-lesp_http_server",
    "-lesp_https_ota",
    "-lesp_https_ota",
    "-lesp_https_ota",
    "-lesp_https_ota",
    "-lesp_https_ota",
    "-lesp_https_ota",
    "-lesp_hw_support",
    "-lesp_hw_support",
    "-lesp_hw_support",
    "-lesp_hw_support",
    "-lesp_hw_support",
    "-lesp_hw_support",
    "-lesp_ipc",
    "-lesp_ipc",
    "-lesp_ipc",
    "-lesp_ipc",
    "-lesp_ipc",
    "-lesp_ipc",
    "-lesp_lcd",
    "-lesp_lcd",
    "-lesp_littlefs",
    "-lesp_local_ctrl",
    "-lesp_local_ctrl",
    "-lesp_netif",
    "-lesp_netif",
    "-lesp_netif",
    "-lesp_netif",
    "-lesp_netif",
    "-lesp_netif",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_phy",
    "-lesp_pm",
    "-lesp_pm",
    "-lesp_pm",
    "-lesp_pm",
    "-lesp_pm",
    "-lesp_pm",
    "-lesp_rainmaker",
    "-lesp_rainmaker",
    "-lesp_ringbuf",
    "-lesp_ringbuf",
    "-lesp_ringbuf",
    "-lesp_ringbuf",
    "-lesp_ringbuf",
    "-lesp_ringbuf",
    "-lesp_rom",
    "-lesp_rom",
    "-lesp_rom",
    "-lesp_rom",
    "-lesp_rom",
    "-lesp_rom",
    "-lesp_schedule",
    "-lesp_schedule",
    "-lesp_serial_slave_link",
    "-lesp_serial_slave_link",
    "-lesp_serial_slave_link",
    "-lesp_serial_slave_link",
    "-lesp_serial_slave_link",
    "-lesp_serial_slave_link",
    "-lesp_system",
    "-lesp_system",
    "-lesp_system",
    "-lesp_system",
    "-lesp_system",
    "-lesp_system",
    "-lesp_timer",
    "-lesp_timer",
    "-lesp_timer",
    "-lesp_timer",
    "-lesp_timer",
    "-lesp_timer",
    "-lesp_tts_chinese",
    "-lesp_websocket_client",
    "-lesp_websocket_client",
    "-lesp_wifi",
    "-lesp_wifi",
    "-lesp_wifi",
    "-lesp_wifi",
    "-lesp_wifi",
    "-lesp_wifi",
    "-lesp-dsp",
    "-lesp-sr",
    "-lesp-sr",
    "-lesp-tls",
    "-lesp-tls",
    "-lesp-tls",
    "-lesp-tls",
    "-lesp-tls",
    "-lesp-tls",
    "-lesp32-camera",
    "-lespcoredump",
    "-lespcoredump",
    "-lespcoredump",
    "-lespcoredump",
    "-lespcoredump",
    "-lespcoredump",
    "-lespnow",
    "-lespnow",
    "-lespnow",
    "-lespnow",
    "-lespnow",
    "-lexpat",
    "-lexpat",
    "-lfatfs",
    "-lfatfs",
    "-lfb_gfx",
    "-lfreemodbus",
    "-lfreemodbus",
    "-lfreertos",
    "-lfreertos",
    "-lfreertos",
    "-lfreertos",
    "-lfreertos",
    "-lfreertos",
    "-lgcc",
    "-lgcov",
    "-lgcov",
    "-lhal",
    "-lhal",
    "-lhal",
    "-lhal",
    "-lhal",
    "-lhal",
    "-lheap",
    "-lheap",
    "-lheap",
    "-lheap",
    "-lheap",
    "-lheap",
    "-lhilexin_wn5",
    "-lhilexin_wn5X2",
    "-lhilexin_wn5X3",
    "-lhuman_face_detect",
    "-ljsmn",
    "-ljsmn",
    "-ljson_generator",
    "-ljson_generator",
    "-ljson_parser",
    "-ljson_parser",
    "-ljson",
    "-ljson",
    "-llibsodium",
    "-llibsodium",
    "-llog",
    "-llog",
    "-llog",
    "-llog",
    "-llog",
    "-llog",
    "-llwip",
    "-llwip",
    "-llwip",
    "-llwip",
    "-llwip",
    "-llwip",
    "-lm",
    "-lmbedcrypto",
    "-lmbedcrypto",
    "-lmbedcrypto",
    "-lmbedcrypto",
    "-lmbedcrypto",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedtls",
    "-lmbedx509",
    "-lmbedx509",
    "-lmbedx509",
    "-lmbedx509",
    "-lmbedx509",
    "-lmdns",
    "-lmdns",
    "-lmesh",
    "-lmesh",
    "-lmesh",
    "-lmesh",
    "-lmesh",
    "-lmfn",
    "-lmqtt",
    "-lmqtt",
    "-lmultinet",
    "-lmultinet",
    "-lmultinet2_ch",
    "-lnet80211",
    "-lnet80211",
    "-lnet80211",
    "-lnet80211",
    "-lnet80211",
    "-lnewlib",
    "-lnewlib",
    "-lnewlib",
    "-lnewlib",
    "-lnewlib",
    "-lnewlib",
    "-lnewlib",
    "-lnghttp",
    "-lnghttp",
    "-lnghttp",
    "-lnghttp",
    "-lnghttp",
    "-lnghttp",
    "-lnihaoxiaoxin_wn5X3",
    "-lnihaoxiaozhi_wn5",
    "-lnihaoxiaozhi_wn5X2",
    "-lnihaoxiaozhi_wn5X3",
    "-lnvs_flash",
    "-lnvs_flash",
    "-lnvs_flash",
    "-lnvs_flash",
    "-lnvs_flash",
    "-lnvs_flash",
    "-lopenssl",
    "-lopenssl",
    "-lperfmon",
    "-lperfmon",
    "-lphy",
    "-lphy",
    "-lphy",
    "-lpp",
    "-lpp",
    "-lpp",
    "-lpp",
    "-lpp",
    "-lprotobuf-c",
    "-lprotobuf-c",
    "-lprotocomm",
    "-lprotocomm",
    "-lpthread",
    "-lpthread",
    "-lpthread",
    "-lpthread",
    "-lpthread",
    "-lpthread",
    "-lpthread",
    "-lqrcode",
    "-lqrcode",
    "-lrmaker_common",
    "-lrmaker_common",
    "-lrtc",
    "-lrtc",
    "-lrtc",
    "-lsdmmc",
    "-lsdmmc",
    "-lsdmmc",
    "-lsdmmc",
    "-lsdmmc",
    "-lsdmmc",
    "-lsmartconfig",
    "-lsmartconfig",
    "-lsmartconfig",
    "-lsmartconfig",
    "-lsmartconfig",
    "-lsoc",
    "-lsoc",
    "-lsoc",
    "-lsoc",
    "-lsoc",
    "-lsoc",
    "-lspi_flash",
    "-lspi_flash",
    "-lspi_flash",
    "-lspi_flash",
    "-lspi_flash",
    "-lspi_flash",
    "-lspiffs",
    "-lspiffs",
    "-lstdc++",
    "-ltcp_transport",
    "-ltcp_transport",
    "-ltcp_transport",
    "-ltcp_transport",
    "-ltcp_transport",
    "-ltcp_transport",
    "-ltcpip_adapter",
    "-ltcpip_adapter",
    "-ltcpip_adapter",
    "-ltcpip_adapter",
    "-ltcpip_adapter",
    "-ltcpip_adapter",
    "-lulp",
    "-lulp",
    "-lulp",
    "-lulp",
    "-lulp",
    "-lulp",
    "-lunity",
    "-lunity",
    "-lvfs",
    "-lvfs",
    "-lvfs",
    "-lvfs",
    "-lvfs",
    "-lvfs",
    "-lvoice_set_xiaole",
    "-lwakenet",
    "-lwakenet",
    "-lwapi",
    "-lwapi",
    "-lwapi",
    "-lwapi",
    "-lwapi",
    "-lwear_levelling",
    "-lwear_levelling",
    "-lwifi_provisioning",
    "-lwifi_provisioning",
    "-lwpa_supplicant",
    "-lwpa_supplicant",
    "-lwpa_supplicant",
    "-lwpa_supplicant",
    "-lwpa_supplicant",
    "-lwpa_supplicant",
    "-lws2812_led",
    "-lxt_hal",
    "-lxtensa",
    "-lxtensa",
    "-lxtensa",
    "-lxtensa",
    "-lxtensa",
    "-lxtensa",
]

def _impl(ctx):
    tool_paths = [
        tool_path(
            name = "gcc",
            path = "cc_wrapper.sh",
        ),
        tool_path(
            name = "ld",
            path = "xtensa-esp32-elf-ld",
        ),
        tool_path(
            name = "ar",
            path = "xtensa-esp32-elf-ar",
        ),
        tool_path(
            name = "cpp",
            path = "/bin/false",
        ),
        tool_path(
            name = "gcov",
            path = "/bin/false",
        ),
        tool_path(
            name = "nm",
            path = "/bin/false",
        ),
        tool_path(
            name = "objdump",
            path = "/bin/false",
        ),
        tool_path(
            name = "strip",
            path = "/bin/false",
        ),
    ]

    default_compile_flags_feature = feature(
        name = "default_compile_flags",
        enabled = True,
        flag_sets = [
            flag_set(
                actions = [
                    ACTION_NAMES.assemble,
                    ACTION_NAMES.preprocess_assemble,
                    ACTION_NAMES.linkstamp_compile,
                    ACTION_NAMES.cpp_compile,
                    ACTION_NAMES.cpp_header_parsing,
                    ACTION_NAMES.cpp_module_compile,
                    ACTION_NAMES.cpp_module_codegen,
                    ACTION_NAMES.lto_backend,
                    ACTION_NAMES.clif_match,
                ],
                flag_groups = [
                    flag_group(
                        flags = [
                            "-DCOMPILING_AS_CPP_NOT_C",
                        ] + COMPILER_CPREPROCESSOR_FLAGS + COMPILER_CPP_FLAGS + BUILD_EXTRA_FLAGS,
                    ),
                ],
            ),
        ],
    )

    default_c_compile_flags_feature = feature(
        name = "default_c_compile_flags",
        enabled = True,
        flag_sets = [
            flag_set(
                actions = [
                    ACTION_NAMES.c_compile,
                ],
                flag_groups = [
                    flag_group(
                        flags = [
                            "-DCOMPILING_AS_C_NOT_CPP",
                        ] + COMPILER_CPREPROCESSOR_FLAGS + COMPILER_C_FLAGS + BUILD_EXTRA_FLAGS,
                    ),
                ],
            ),
        ],
    )

    all_link_actions = [
        ACTION_NAMES.cpp_link_executable,
        ACTION_NAMES.cpp_link_dynamic_library,
        ACTION_NAMES.cpp_link_nodeps_dynamic_library,
    ]

    default_link_flags_feature = feature(
        name = "default_link_flags",
        enabled = True,
        flag_sets = [
            flag_set(
                actions = all_link_actions,
                flag_groups = [
                    flag_group(
                        flags = COMPILER_C_ELF_FLAGS + ["-Wl,--start-group"] + COMPILER_C_ELF_LIBS +
                                [
                                    "-Wl,--end-group",
                                    "-Wl,-EL",
                                ],
                    ),
                ],
            ),
        ],
    )

    features = [
        default_compile_flags_feature,
        default_c_compile_flags_feature,
        default_link_flags_feature,
    ]

    return cc_common.create_cc_toolchain_config_info(
        ctx = ctx,
        cxx_builtin_include_directories = [
            "external/xtensa_esp32_elf_linux64/xtensa-esp32-elf/sys-include",
            "external/xtensa_esp32_elf_linux64/xtensa-esp32-elf/include/c++/5.2.0",
            "external/xtensa_esp32_elf_linux64/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed",
            "external/xtensa_esp32_elf_linux64/lib/gcc/xtensa-esp32-elf/5.2.0/include",
            RUNTIME_PLATFORM_PATH + "/cores/esp32",
            RUNTIME_PLATFORM_PATH + "/variants/esp32",
        ] + [COMPILER_SDK_PATH + "/" + p for p in INCLUDE_DIRS],
        features = features,
        toolchain_identifier = "xtensa-toolchain",
        host_system_name = "local",
        target_system_name = "local",
        target_cpu = "xtensa",
        target_libc = "unknown",
        compiler = "cpp",
        abi_version = "unknown",
        abi_libc_version = "unknown",
        tool_paths = tool_paths,
    )

cc_toolchain_config = rule(
    implementation = _impl,
    attrs = {},
    provides = [CcToolchainConfigInfo],
)
